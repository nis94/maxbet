version: '3'


services:

  rabbitmq-container:
    image: rabbitmq:3-management-alpine
    restart: always
    hostname: rabbitmq-container
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - maxbet
      
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass 111111
    volumes: 
      - cache:/data
      
  db:
    image: mysql:8.0
    restart: always
    ports:
      - 3306:3306
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: words
      MYSQL_ROOT_PASSWORD: 111111
    volumes:
      - /var/lib/mysql
    networks:
      - maxbet

  words-api:
    build:
      dockerfile: WordsDockerfile
    image: words-api:latest
    restart: always
    ports:
      - 8080
    networks:
      - maxbet
      
  dictionary-worker:
    build:
      dockerfile: DictionaryDockerfile
    image: dictionary-worker:latest
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - 8081
    environment:
      - words_api_url=http://words-api:8080/words
      - spring_rabbitmq_host=rabbitmq-container
      - scheduled_fixed_rate=500
    depends_on:
      - rabbitmq-container
      - words-api
    networks:
      - maxbet
      
  algo-sorter:
    build:
      dockerfile: AlgoDockerfile
    image: algo-sorter:latest
    restart: always
    ports:
      - 8082
    environment:
      - spring_rabbitmq_host=rabbitmq-container
      - dictionary_api_url=http://dictionary-worker:8081/length
    depends_on:
      - rabbitmq-container
      - words-api
      - dictionary-worker
      - db
    command: sh -c './wait-for db:3306 -- npm start'
    links:
      - db:db
#      - cache
    networks:
      - maxbet
      
      
volumes:
  cache:
    driver: local
  db:
    
    
networks:
  maxbet:
    external:
      name: maxbet
